// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl
/** 
 * The Memory chip implements the complete address space of the Hack data memory,
 * including RAM, memory mapped screen, and memory mapped keyboard.
 * Outputs the value of the memory location specified by the address input.
 * If (load == 1), sets the memory location specified by the address input
 * to the value of the in input.
 * Address space rules:
 * Only the upper 16K + 8K + 1 words of the memory are used.
 * Access to address 0 to 16383 (0x0000 to 0x3FFF) results in accessing the RAM;
 * Access to address 16384 to 24575 (0x4000 to 0x5FFF) results in accessing the Screen memory map;
 * Access to address 24576 (0x6000) results in accessing the Keyboard memory map.
 */ 
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:

    DMux8Way(in=load, sel=address[12..14], a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);

    Screen(in=in, load=load5, address=address[0..12], out=out5);
    Screen(in=in, load=load6, address=address[0..12], out=out6);

    Keyboard(out=out7);

    RAM16K(in=in, load=load1, address=address[0..13], out=out1);
    RAM16K(in=in, load=load2, address=address[0..13], out=out2);
    RAM16K(in=in, load=load3, address=address[0..13], out=out3);
    RAM16K(in=in, load=load4, address=address[0..13], out=out4);

    

    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=false, sel=address[12..14], out=out);

  
    //// Replace this comment with your code.
}
